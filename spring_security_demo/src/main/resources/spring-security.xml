<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/mvc
                  http://www.springframework.org/schema/mvc/spring-mvc.xsd
                  http://code.alibabatech.com/schema/dubbo
                  http://code.alibabatech.com/schema/dubbo/dubbo.xsd
                  http://www.springframework.org/schema/context
                  http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd">

<!--
      ① 配置哪些链接可以放行(没有认证通过也可以访问的资源)
      security="none"：没有权限
      pattern="/login.html"：没有任何权限，可以访问login.html
    -->
    <!--<security:http security="none" pattern="/login.html"></security:http>-->

    <!--
    ② 定义哪些链接不可以放行(必须通过认证才能访问的资源)，及需要有角色，有权限才可以放行访问资源
    <security:http auto-config="true" use-expressions="true">
          auto-config="true":开启自动配置 由springsecurity提供登录页面，提供登录的url地址，退出的url地址
          use-expressions="true"：使用表达式的方式控制权限
             security:intercept-url：定义哪些链接不可以放行，需要当前角色和权限才能放行
                pattern="/**"：要求系统中的所有资源，都必须通过角色和权限才能访问
                access：指定角色和权限
                   如果使用表达式use-expressions="true"
                       access="hasRole('ROLE_ADMIN')：表示具有ROLE_ADMIN的角色才能访问系统的资源
                   如果不使用表达式use-expressions="false"
                       access="ROLE_ADMIN：表示具有ROLE_ADMIN的角色才能访问系统的资源
    -->

    <security:http security="none" pattern="/js/**"></security:http>
    <security:http security="none" pattern="/login.html"></security:http>
    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>

    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/**" access="hasRole('ROLE_admin')" ></security:intercept-url>
        <security:form-login login-page="/login.html"
        username-parameter="username" password-parameter="password" login-processing-url="/login.do"
        default-target-url="/index.html" always-use-default-target="true"
        authentication-failure-url="/login.html"></security:form-login>

        <security:intercept-url pattern="/index.html" access="isAuthenticated()"></security:intercept-url>

        <security:intercept-url pattern="/a.html" access="hasAuthority('update')"></security:intercept-url>

        <security:intercept-url pattern="/b.html" access="hasAuthority('add')"></security:intercept-url>

        <security:intercept-url pattern="/c.html" access="hasRole('YX')"></security:intercept-url>

        <security:intercept-url pattern="/d.html" access="hasRole('ROLE_admin')"></security:intercept-url>

        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/index.html"></security:logout>

        <security:csrf disabled="true"></security:csrf>
    </security:http>
<!--    <security:http auto-config="true" use-expressions="true">-->
<!--        <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"></security:intercept-url>-->
<!--    </security:http>-->

    <!--
      ③ 认证管理：定义登录账号和密码，并授予当前用户访问的角色或权限
        （1）：将用户名和密码：当前用户具有的角色，写死到配置文件中（现在:入门）
                security:user name="admin" :登录名
                authorities="ROLE_ADMIN"   ：角色(ROLE_ADMIN),权限
                password="admin"          ：密码
         （2）：用户名和密码，当前用户具有的角色，从数据库中查询（后续）
    -->
    <security:authentication-manager>
<!--        <security:authentication-provider>-->
<!--            <security:user-service>-->
<!--                <security:user name="yx" authorities="ROLE_ABC" password="{noop}123"></security:user>-->
<!--            </security:user-service>-->
<!--        </security:authentication-provider>-->

        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <context:component-scan base-package="com.atguigu"></context:component-scan>

    <mvc:annotation-driven></mvc:annotation-driven>


<!--    <security:authentication-manager>-->
<!--        <security:authentication-provider>-->
<!--            <security:user-service>-->
<!--                <security:user name="admin" authorities="ROLE_ADMIN" password="admin"></security:user>-->
<!--            </security:user-service>-->
<!--        </security:authentication-provider>-->
<!--    </security:authentication-manager>-->



</beans>